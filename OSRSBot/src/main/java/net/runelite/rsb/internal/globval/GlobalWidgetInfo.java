package net.runelite.rsb.internal.globval;

import net.runelite.api.widgets.WidgetID;
import net.runelite.api.widgets.WidgetInfo;

/**
 * The list of widget info in the form of (parent, child)
 * The [Group] at the start and end denotes a segment
 * Though it is not indicative of the underlying parent interface
 * Rather just for grouping and potentially future updating purposes
 */
public enum GlobalWidgetInfo {
    /**
     * [DIALOG DESTROY ITEM] Widget Info
     */
    DIALOG_DESTROY_ITEM(WidgetIndices.DialogDestroyItem.GROUP_INDEX, WidgetIndices.DialogDestroyItem.PARENT_DYNAMIC_CONTAINER),
    DIALOG_DESTROY_ITEM_YES(WidgetIndices.DialogDestroyItem.GROUP_INDEX, WidgetIndices.DialogDestroyItem.BUTTON_YES_SPRITE),
    // [DIALOG DESTROY ITEM]

    /**
     * [INVENTORY] Widget Info
     */
    INVENTORY_ITEMS_CONTAINER(WidgetIndices.Inventory.GROUP_INDEX, WidgetIndices.Inventory.SPRITE_GRID),
    // [INVENTORY]

    /**
     * [QUICK PRAYER]
     */
    QUICK_PRAYER_PRAYERS(WidgetIndices.QuickPrayers.GROUP_INDEX, WidgetIndices.QuickPrayers.PRAYERS_DYNAMIC_CONTAINER),
    // [QUICK PRAYER]

    /**
     * [CONTACT NPC] Widget Info
     */
    CONTACT_NPC_HONEST_JIMMY(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.HONEST_JIMMY_CONTAINER),
    CONTACT_NPC_BERT_THE_SANDMAN(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.BERT_THE_SANDMAN_CONTAINER),
    CONTACT_NPC_ADVISOR_GHRIM(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.ADVISOR_GHRIM_CONTAINER),
    CONTACT_NPC_DARK_MAGE_ABYSS(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.DARK_MAGE_ABYSS_CONTAINER),
    CONTACT_NPC_LANTHUS(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.LANTHUS_CONTAINER),
    CONTACT_NPC_SPRIA(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.SPRIA_CONTAINER),
    CONTACT_NPC_TURAEL(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.TURAEL_CONTAINER),
    CONTACT_NPC_MAZCHNA(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.MAZCHNA_CONTAINER),
    CONTACT_NPC_VANNAKA(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.VANNAKA_CONTAINER),
    CONTACT_NPC_CHAELDAR(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.CHAELDAR_CONTAINER),
    CONTACT_NPC_NIEVE(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.NIEVE_CONTAINER),
    CONTACT_NPC_DURADEL(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.DURADEL_CONTAINER),
    CONTACT_NPC_KONAR(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.KONAR_CONTAINER),
    CONTACT_NPC_KRYSTILIA(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.KRYSTILIA_CONTAINER),
    CONTACT_NPC_MURPHY(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.MURPHY_CONTAINER),
    CONTACT_NPC_CYRISUS(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.CYRISUS_CONTAINER),
    CONTACT_NPC_SMOGGY(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.SMOGGY_CONTAINER),
    CONTACT_NPC_CAPTAIN_GINEA(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.CAPTAIN_GINEA_CONTAINER),
    CONTACT_NPC_WATSON(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.WATSON_CONTAINER),
    CONTACT_NPC_BARBARIAN_GUARD(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.BARBARIAN_GUARD_CONTAINER),
    CONTACT_NPC_RANDOM(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.RANDOM_CONTAINER),
    CONTACT_NPC_AMY(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.AMY_CONTAINER),
    CONTACT_NPC_SCROLLBAR(WidgetIndices.ContactNpc.GROUP_INDEX, WidgetIndices.ContactNpc.SCROLLBAR_DYNAMIC_CONTAINER),

    /**
     * [CHAT] Widget Info
     */
    CHATBOX_MESSAGES(WidgetIndices.ChatBox.GROUP_INDEX, WidgetIndices.ChatBox.MESSAGES_CONTAINER),
    CHATBOX_FULL_INPUT(WidgetIndices.ChatBox.GROUP_INDEX, WidgetIndices.ChatBox.FULL_INPUT),
    // [CHAT

    /**
     * [DIALOG NPC]
     */
    DIALOG_NPC_TEXT(WidgetIndices.DialogNPC.GROUP_INDEX, WidgetIndices.DialogNPC.DIALOG_TEXT_LABEL),
    DIALOG_NPC_CONTINUE(WidgetIndices.DialogNPC.GROUP_INDEX, WidgetIndices.DialogNPC.DIALOG_CONTINUE_LABEL),
    // [DIALOG NPC]
    DIALOG_OPTION(WidgetIndices.DialogOptions.GROUP_INDEX, WidgetIndices.DialogOptions.CONTAINER),
    // CONTAINER FOR NPC DIALOG OPTIONS
    DIALOG_DYNAMIC_CONTAINER(WidgetIndices.DialogOptions.GROUP_INDEX, WidgetIndices.DialogOptions.DYNAMIC_CONTAINER),

    /**
     * [DIALOG PLAYER]
     */
    DIALOG_PLAYER_CONTINUE(WidgetIndices.DialogPlayer.GROUP_INDEX, WidgetIndices.DialogPlayer.OPTION_CONTINUE_LABEL),

    /**
     * [Dialog] Continue
     */
    DIALOG_CONTINUE(WidgetIndices.Dialog.GROUP_INDEX, WidgetIndices.Dialog.TEXT_LABEL),

    /**
     * [Dialog] Quest Continue
     */
    DIALOG_QUEST_CONTINUE(WidgetIndices.DialogQuest.GROUP_INDEX, WidgetIndices.DialogQuest.CONTINUE_TEXT),

    /**
     * [LevelUp] Dialog
     */
    DIALOG_LEVEL_UP_CONTINUE(WidgetIndices.LevelUp.GROUP_INDEX, WidgetIndices.LevelUp.CONTINUE),

    /**
     * [DialogUnknown]
     */
    DIALOG_UNKNOWN_CONTINUE(WidgetIndices.DialogUnknown.GROUP_INDEX, WidgetIndices.DialogUnknown.CONTINUE),

    /**
     * [LOGOUT] Widget Info
     */
    LOGOUT_BUTTON(WidgetIndices.Logout.GROUP_INDEX, WidgetIndices.Logout.BUTTON_LOGOUT_CONTAINER),

    /**
     * [LOGOUT] World Switch Button
     */
    WORLD_SWITCH_BUTTON(WidgetIndices.Logout.GROUP_INDEX, WidgetIndices.Logout.BUTTON_WORLD_SWITCHER_LABEL),
    // [LOGOUT]

    /**
     * [WORLD SWITCH] World Dynamic Container
     */
    WORLD_SWITCH_DYNAMIC_CONTAINER(WidgetIndices.WorldSwitcher.GROUP_INDEX, WidgetIndices.WorldSwitcher.INNER_FRAME_WORLD_LIST_DYNAMIC_CONTAINER),

    /**
     * [WORLD SWITCH] Scroll Bar
     */
    WORLD_SWITCH_SCROLL_BAR(WidgetIndices.WorldSwitcher.GROUP_INDEX, WidgetIndices.WorldSwitcher.INNER_FRAME_SCROLLBAR_DYNAMIC_CONTAINER),

    // [WORLD SWITCH]

    /**
     * [WILDERNESS] Widget Info
     */
    PVP_WILDERNESS_LEVEL(WidgetIndices.PvPScreen.GROUP_INDEX, WidgetIndices.PvPScreen.WILDNERESS_LEVEL_LABEL),
    // [WILDERNESS]

    /**
     * [WORLD MAP] Widget Info
     */
    WORLD_MAP_VIEW(WidgetIndices.WorldMap.GROUP_INDEX, WidgetIndices.WorldMap.MAPVIEW_CONTAINER),
    // [WORLD MAP]

    /**
     * [LOGIN] Widget Info
     */
    LOGIN_MOTW(WidgetIndices.ClickToPlayScreen.GROUP_INDEX, WidgetIndices.ClickToPlayScreen.MOTW_CONTAINER),
    LOGIN_MOTW_TITLE(WidgetIndices.ClickToPlayScreen.GROUP_INDEX, WidgetIndices.ClickToPlayScreen.MOTW_TITLE_LABEL),
    LOGIN_MOTW_TEXT(WidgetIndices.ClickToPlayScreen.GROUP_INDEX, WidgetIndices.ClickToPlayScreen.MOTW_TEXT_LABEL),
    LOGIN_CLICK_TO_PLAY(WidgetIndices.ClickToPlayScreen.GROUP_INDEX, WidgetIndices.ClickToPlayScreen.BUTTON_CLICK_HERE_TO_PLAY_CONTAINER),
    // [LOGIN]

    /**
     * [BANK] Widget Info
     */
    BANK_DYNAMIC_CONTAINER(WidgetIndices.Bank.GROUP_INDEX, WidgetIndices.Bank.FRAME_DYNAMIC_CONTAINER),
    BANK_ITEM_COUNT(WidgetIndices.Bank.GROUP_INDEX, WidgetIndices.Bank.ITEM_SLOTS_USED_LABEL),
    BANK_LINE_SEPARATOR(WidgetIndices.Bank.GROUP_INDEX, WidgetIndices.Bank.ITEM_SLOTS_SEPARATOR_LINE),
    BANK_ITEM_MAX(WidgetIndices.Bank.GROUP_INDEX, WidgetIndices.Bank.ITEM_SLOTS_MAX_LABEL),
    BANK_TAB(WidgetIndices.Bank.GROUP_INDEX, WidgetIndices.Bank.TABS_DYNAMIC_CONTAINER),
    BANK_ITEMS_CONTAINER(WidgetIndices.Bank.GROUP_INDEX, WidgetIndices.Bank.ITEMS_DYNAMIC_CONTAINER),
    BANK_SCROLLBAR(WidgetIndices.Bank.GROUP_INDEX, WidgetIndices.Bank.SCROLLBAR_DYNAMIC_CONTAINER),
    BANK_BUTTON_SWAP(WidgetIndices.Bank.GROUP_INDEX, WidgetIndices.Bank.BUTTON_SWAP_CONTAINER),
    BANK_BUTTON_INSERT(WidgetIndices.Bank.GROUP_INDEX, WidgetIndices.Bank.BUTTON_INSERT_CONTAINER),
    BANK_BUTTON_ITEM(WidgetIndices.Bank.GROUP_INDEX, WidgetIndices.Bank.BUTTON_ITEM_CONTAINER),
    BANK_BUTTON_NOTE(WidgetIndices.Bank.GROUP_INDEX, WidgetIndices.Bank.BUTTON_NOTE_CONTAINER),
    BANK_BUTTON_SEARCH(WidgetIndices.Bank.GROUP_INDEX, WidgetIndices.Bank.BUTTON_SEARCH_SPRITE),
    BANK_BUTTON_DEPOSIT_CARRIED_ITEMS(WidgetIndices.Bank.GROUP_INDEX, WidgetIndices.Bank.BUTTON_DEPOSIT_CARRIED_ITEMS_SPRITE),
    BANK_BUTTON_DEPOSIT_WORN_ITEMS(WidgetIndices.Bank.GROUP_INDEX, WidgetIndices.Bank.BUTTON_DEPOSIT_WORN_ITEMS_SPRITE),
    // [BANK]

    /**
     * [BANK WORN ITEMS] Widget Info
     */
    BANK_EQUIPMENT_ITEMS_CONTAINER(WidgetIndices.Bank.GROUP_INDEX, WidgetIndices.Bank.WORN_EQUIPMENT_CONTAINER),
    BANK_EQUIPMENT_HELMET(WidgetIndices.Bank.GROUP_INDEX,  WidgetIndices.Bank.WORN_EQUIPMENT_HELMET_DYNAMIC_CONTAINER),
    BANK_EQUIPMENT_CAPE(WidgetIndices.Bank.GROUP_INDEX,  WidgetIndices.Bank.WORN_EQUIPMENT_CAPE_DYNAMIC_CONTAINER),
    BANK_EQUIPMENT_AMULET(WidgetIndices.Bank.GROUP_INDEX,  WidgetIndices.Bank.WORN_EQUIPMENT_AMULET_DYNAMIC_CONTAINER),
    BANK_EQUIPMENT_WEAPON(WidgetIndices.Bank.GROUP_INDEX,  WidgetIndices.Bank.WORN_EQUIPMENT_WEAPON_DYNAMIC_CONTAINER),
    BANK_EQUIPMENT_BODY(WidgetIndices.Bank.GROUP_INDEX,  WidgetIndices.Bank.WORN_EQUIPMENT_BODY_DYNAMIC_CONTAINER),
    BANK_EQUIPMENT_SHIELD(WidgetIndices.Bank.GROUP_INDEX,  WidgetIndices.Bank.WORN_EQUIPMENT_SHIELD_DYNAMIC_CONTAINER),
    BANK_EQUIPMENT_LEGS(WidgetIndices.Bank.GROUP_INDEX,  WidgetIndices.Bank.WORN_EQUIPMENT_LEGS_DYNAMIC_CONTAINER),
    BANK_EQUIPMENT_GLOVES(WidgetIndices.Bank.GROUP_INDEX,  WidgetIndices.Bank.WORN_EQUIPMENT_GLOVES_DYNAMIC_CONTAINER),
    BANK_EQUIPMENT_BOOTS(WidgetIndices.Bank.GROUP_INDEX,  WidgetIndices.Bank.WORN_EQUIPMENT_BOOTS_DYNAMIC_CONTAINER),
    BANK_EQUIPMENT_RING(WidgetIndices.Bank.GROUP_INDEX,  WidgetIndices.Bank.WORN_EQUIPMENT_RING_DYNAMIC_CONTAINER),
    BANK_EQUIPMENT_AMMO(WidgetIndices.Bank.GROUP_INDEX, WidgetIndices.Bank.WORN_EQUIPMENT_AMMO_DYNAMIC_CONTAINER),
    BANK_EQUIPMENT_BUTTON(WidgetIndices.Bank.GROUP_INDEX, WidgetIndices.Bank.BUTTON_WORN_EQUIPMENT_DYNAMIC_CONTAINER),
    // [BANK WORN ITEMS]

    /**
     * [BANK INVENTORY ITEMS] Widget Info
     */
    BANK_INVENTORY_ITEMS_CONTAINER(WidgetIndices.BankInventoryItems.GROUP_INDEX, WidgetIndices.BankInventoryItems.ITEMS_DYNAMIC_CONTAINER),
    // [BANK INVENTORY ITEMS]

    /**
     * [DEPOSIT BOX] Widget Info
     */
    DEPOSIT_DYNAMIC_COMPONENTS(WidgetIndices.DepositBox.GROUP_INDEX, WidgetIndices.DepositBox.DYNAMIC_CONTAINER),
    DEPOSIT_ITEMS_CONTAINER(WidgetIndices.DepositBox.GROUP_INDEX, WidgetIndices.DepositBox.ITEMS_DYNAMIC_CONTAINER),
    DEPOSIT_BUTTON_DEPOSIT_INVENTORY_ITEMS(WidgetIndices.DepositBox.GROUP_INDEX, WidgetIndices.DepositBox.BUTTON_DEPOSIT_INVENTORY_SPRITE),
    DEPOSIT_BUTTON_DEPOSIT_WORN_ITEMS(WidgetIndices.DepositBox.GROUP_INDEX, WidgetIndices.DepositBox.BUTTON_DEPOSIT_WORN_ITEMS_SPRITE),
    DEPOSIT_BUTTON_DEPOSIT_LOOT(WidgetIndices.DepositBox.GROUP_INDEX, WidgetIndices.DepositBox.BUTTON_DEPOSIT_LOOT_SPRITE),
    // [DEPOSIT BOX]

    /**
     * [COMBAT] Widget Info
     */
    COMBAT_STYLE_ONE(WidgetIndices.CombatOptionsTab.GROUP_INDEX, WidgetIndices.CombatOptionsTab.WEAPON_STYLE_ONE_CONTAINER),
    COMBAT_STYLE_TWO(WidgetIndices.CombatOptionsTab.GROUP_INDEX, WidgetIndices.CombatOptionsTab.WEAPON_STYLE_TWO_CONTAINER),
    COMBAT_STYLE_THREE(WidgetIndices.CombatOptionsTab.GROUP_INDEX, WidgetIndices.CombatOptionsTab.WEAPON_STYLE_THREE_CONTAINER),
    COMBAT_STYLE_FOUR(WidgetIndices.CombatOptionsTab.GROUP_INDEX, WidgetIndices.CombatOptionsTab.WEAPON_STYLE_FOUR_CONTAINER),
    COMBAT_AUTO_CAST_DEFENSIVE_SPELL(WidgetIndices.CombatOptionsTab.GROUP_INDEX, WidgetIndices.CombatOptionsTab.AUTO_CAST_DEFENSIVE_SPELL_CONTAINER),
    COMBAT_AUTO_CAST_SPELL(WidgetIndices.CombatOptionsTab.GROUP_INDEX, WidgetIndices.CombatOptionsTab.AUTO_CAST_SPELL_CONTAINER),
    COMBAT_AUTO_RETALIATE(WidgetIndices.CombatOptionsTab.GROUP_INDEX, WidgetIndices.CombatOptionsTab.AUTO_RETALIATE_CONTAINER),
    // [COMBAT]

    /**
     * [EQUIPMENT] Widget Info
     */
    EQUIPMENT_ITEMS_CONTAINER(WidgetIndices.WornEquipmentTab.GROUP_INDEX, WidgetIndices.WornEquipmentTab.PARENT_CONTAINER),
    EQUIPMENT_HELMET(WidgetIndices.WornEquipmentTab.GROUP_INDEX,  WidgetIndices.WornEquipmentTab.HELMET_DYNAMIC_CONTAINER),
    EQUIPMENT_CAPE(WidgetIndices.WornEquipmentTab.GROUP_INDEX,  WidgetIndices.WornEquipmentTab.CAPE_DYNAMIC_CONTAINER),
    EQUIPMENT_AMULET(WidgetIndices.WornEquipmentTab.GROUP_INDEX,  WidgetIndices.WornEquipmentTab.AMULET_DYNAMIC_CONTAINER),
    EQUIPMENT_WEAPON(WidgetIndices.WornEquipmentTab.GROUP_INDEX,  WidgetIndices.WornEquipmentTab.WEAPON_DYNAMIC_CONTAINER),
    EQUIPMENT_BODY(WidgetIndices.WornEquipmentTab.GROUP_INDEX,  WidgetIndices.WornEquipmentTab.BODY_DYNAMIC_CONTAINER),
    EQUIPMENT_SHIELD(WidgetIndices.WornEquipmentTab.GROUP_INDEX,  WidgetIndices.WornEquipmentTab.SHIELD_DYNAMIC_CONTAINER),
    EQUIPMENT_LEGS(WidgetIndices.WornEquipmentTab.GROUP_INDEX,  WidgetIndices.WornEquipmentTab.LEGS_DYNAMIC_CONTAINER),
    EQUIPMENT_GLOVES(WidgetIndices.WornEquipmentTab.GROUP_INDEX,  WidgetIndices.WornEquipmentTab.GLOVES_DYNAMIC_CONTAINER),
    EQUIPMENT_BOOTS(WidgetIndices.WornEquipmentTab.GROUP_INDEX,  WidgetIndices.WornEquipmentTab.BOOTS_DYNAMIC_CONTAINER),
    EQUIPMENT_RING(WidgetIndices.WornEquipmentTab.GROUP_INDEX,  WidgetIndices.WornEquipmentTab.RING_DYNAMIC_CONTAINER),
    EQUIPMENT_AMMO(WidgetIndices.WornEquipmentTab.GROUP_INDEX, WidgetIndices.WornEquipmentTab.AMMO_DYNAMIC_CONTAINER),
    // [EQUIPMENT]

    /**
     * [TRADE] Widget Info
     */
    TRADE_MAIN_SCREEN_WINDOW_CONTAINER(WidgetIndices.TradeFirstScreen.GROUP_INDEX, WidgetIndices.TradeFirstScreen.TRADE_WINDOW_CONTAINER),
    TRADE_MAIN_SCREEN_PARTNER_FREE_SLOTS(WidgetIndices.TradeFirstScreen.GROUP_INDEX, WidgetIndices.TradeFirstScreen.BUTTON_FREE_INV_SLOTS_LABEL),
    TRADE_MAIN_SCREEN_ACCEPT(WidgetIndices.TradeFirstScreen.GROUP_INDEX, WidgetIndices.TradeFirstScreen.BUTTON_ACCEPT_DYNAMIC_CONTAINER),
    TRADE_MAIN_SCREEN_DECLINE(WidgetIndices.TradeFirstScreen.GROUP_INDEX, WidgetIndices.TradeFirstScreen.BUTTON_DECLINE_DYNAMIC_CONTAINER),
    TRADE_MAIN_SCREEN_MY_OFFER_ITEMS(WidgetIndices.TradeFirstScreen.GROUP_INDEX, WidgetIndices.TradeFirstScreen.MY_OFFER_DYNAMIC_CONTAINER),
    TRADE_MAIN_SCREEN_PARTNER_OFFER_ITEMS(WidgetIndices.TradeFirstScreen.GROUP_INDEX, WidgetIndices.TradeFirstScreen.PARTNER_OFFER_DYNAMIC_CONTAINER),
    TRADE_MAIN_SCREEN_PARTNER_NAME(WidgetIndices.TradeFirstScreen.GROUP_INDEX, WidgetIndices.TradeFirstScreen.NAME_OF_TRADE_PARTNER_LABEL),
    TRADE_SECOND_SCREEN_ACCEPT(WidgetIndices.TradeSecondScreen.GROUP_INDEX, WidgetIndices.TradeSecondScreen.BUTTON_ACCEPT_SHADOW_BOX),
    TRADE_SECOND_SCREEN_DECLINE(WidgetIndices.TradeSecondScreen.GROUP_INDEX, WidgetIndices.TradeSecondScreen.BUTTON_DECLINE_SHADOW_BOX),
    TRADE_SECOND_SCREEN_MY_OFFER_ITEM_LIST(WidgetIndices.TradeSecondScreen.GROUP_INDEX, WidgetIndices.TradeSecondScreen.MY_OFFER_ITEM_LIST_DYNAMIC_CONTAINER),
    TRADE_SECOND_SCREEN_PARTNER_OFFER_ITEM_LIST(WidgetIndices.TradeSecondScreen.GROUP_INDEX, WidgetIndices.TradeSecondScreen.MY_PARTNER_OFFER_ITEM_LIST_DYNAMIC_CONTAINER),
    TRADE_SECOND_SCREEN_PARTNER_NAME(WidgetIndices.TradeSecondScreen.GROUP_INDEX, WidgetIndices.TradeSecondScreen.NAME_OF_TRADE_PARTNER_LABEL),
    // [TRADE]

    /**
     * [PLAYER INVENTORY DURING TRADE] Widget Info
     */
    TRADE_SCREEN_PLAYER_INVENTORY(WidgetIndices.PlayerTradeInventory.GROUP_INDEX, WidgetIndices.PlayerTradeInventory.ITEMS_CONTAINER),

    /**
     * [STORE] Widget Info
     */
    STORE_DYNAMIC_COMPONENTS(WidgetIndices.Store.GROUP_INDEX, WidgetIndices.Store.DYNAMIC_CONTAINER),
    STORE_ITEMS_CONTAINER(WidgetIndices.Store.GROUP_INDEX, WidgetIndices.Store.ITEMS_DYNAMIC_CONTAINER),
    // [STORE]

    /**
     * [GRAND EXCHANGE]
     */
    GRAND_EXCHANGE_SEARCH_INPUT(CHATBOX_FULL_INPUT),
    //GRAND_EXCHANGE_OFFER_WINDOW(WidgetIndices.GrandExchange.GROUP_INDEX, WidgetIndices.GrandExchange.CONTAINER),
    GRAND_EXCHANGE_SEARCH_DYNAMIC_CONTAINER(WidgetIndices.ChatBox.GROUP_INDEX, WidgetIndices.ChatBox.GE_SEARCH_RESULTS),
    GRAND_EXCHANGE_OFFER_WINDOW(WidgetIndices.GrandExchange.GROUP_INDEX, 25),
    GRAND_EXCHANGE_INTERFACE_LAYOUT(WidgetIndices.GrandExchange.GROUP_INDEX,WidgetIndices.GrandExchange.DYNAMIC_CONTAINER ),
    GRAND_EXCHANGE_TITLE(WidgetIndices.GrandExchange.GROUP_INDEX, WidgetIndices.GrandExchange.TITLE_DYNAMIC_CONTAINER),
    GRAND_EXCHANGE_COLLECTION_AREA(WidgetIndices.GrandExchange.GROUP_INDEX, WidgetIndices.GrandExchange.OFFER_STATUS_COLLECTION_AREA_DYNAMIC_CONTAINER),
    GRAND_EXCHANGE_COLLECT_AREA_ONE(WidgetIndices.GrandExchange.GROUP_INDEX, WidgetIndices.DynamicComponents.GrandExchangeCollectionArea.RIGHT_ITEM_SPRITE),
    GRAND_EXCHANGE_COLLECT_AREA_TWO(WidgetIndices.GrandExchange.GROUP_INDEX, WidgetIndices.DynamicComponents.GrandExchangeCollectionArea.LEFT_ITEM_SPRITE),
    GRAND_EXCHANGE_INVENTORY_ITEMS_CONTAINER(WidgetInfo.GRAND_EXCHANGE_INVENTORY_ITEMS_CONTAINER),
    // [GRAND EXCHANGE]

    /**
     * [MAGIC] Widget Info
     */
    MAGIC_SPELL_LIST(WidgetIndices.SpellbookTab.GROUP_INDEX, WidgetIndices.SpellbookTab.SPELLS_CONTAINER),
    MAGIC_AUTOCAST_SPELL_LIST(WidgetIndices.SpellAutocast.GROUP_INDEX, WidgetIndices.SpellAutocast.SPELLS_DYNAMIC_CONTAINER),
    // [MAGIC]

    SPELL_LUMBRIDGE_HOME_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.LUMBRIDGE_HOME_TELEPORT_SPRITE),
    SPELL_EDGEVILLE_HOME_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.EDGEVILLE_HOME_TELEPORT_SPRITE),
    SPELL_LUNAR_HOME_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.LUNAR_HOME_TELEPORT_SPRITE),
    SPELL_ARCEUUS_HOME_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.ARCEUUS_HOME_TELEPORT_SPRITE),
    SPELL_KOUREND_HOME_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.KOUREND_HOME_TELEPORT_SPRITE),
    SPELL_CATHERBY_HOME_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.CATHERBY_HOME_TELEPORT_SPRITE),
    SPELL_LUNAR_FERTILE_SOIL(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.FERTILE_SOIL_SPRITE),


    /* STANDARD SPELL BOOK WIDGETS*/
    SPELL_WIND_STRIKE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.WIND_STRIKE_SPRITE),
    SPELL_CONFUSE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.CONFUSE_SPRITE),
    SPELL_ENCHANT_CROSSBOW_BOLT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.ENCHANT_CROSSBOW_BOLT_SPRITE),
    SPELL_WATER_STRIKE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.WATER_STRIKE_SPRITE),
    SPELL_LVL_1_ENCHANT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.LVL_1_ENCHANT_SPRITE),
    SPELL_EARTH_STRIKE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.EARTH_STRIKE_SPRITE),
    SPELL_WEAKEN(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.WEAKEN_SPRITE),
    SPELL_FIRE_STRIKE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.FIRE_STRIKE_SPRITE),
    SPELL_BONES_TO_BANANAS(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.BONES_TO_BANANAS_SPRITE),
    SPELL_WIND_BOLT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.WIND_BOLT_SPRITE),
    SPELL_CURSE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.CURSE_SPRITE),
    SPELL_BIND(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.BIND_SPRITE),
    SPELL_LOW_LEVEL_ALCHEMY(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.LOW_LEVEL_ALCHEMY_SPRITE),
    SPELL_WATER_BOLT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.WATER_BOLT_SPRITE),
    SPELL_VARROCK_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.VARROCK_TELEPORT_SPRITE),
    SPELL_LVL_2_ENCHANT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.LVL_2_ENCHANT_SPRITE),
    SPELL_EARTH_BOLT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.EARTH_BOLT_SPRITE),
    SPELL_LUMBRIDGE_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.LUMBRIDGE_TELEPORT_SPRITE),
    SPELL_TELEKINETIC_GRAB(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.TELEKINETIC_GRAB_SPRITE),
    SPELL_FIRE_BOLT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.FIRE_BOLT_SPRITE),
    SPELL_FALADOR_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.FALADOR_TELEPORT_SPRITE),
    SPELL_CRUMBLE_UNDEAD(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.CRUMBLE_UNDEAD_SPRITE),
    SPELL_TELEPORT_TO_HOUSE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.TELEPORT_TO_HOUSE_SPRITE),
    SPELL_WIND_BLAST(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.WIND_BLAST_SPRITE),
    SPELL_SUPERHEAT_ITEM(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.SUPERHEAT_ITEM_SPRITE),
    SPELL_CAMELOT_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.CAMELOT_TELEPORT_SPRITE),
    SPELL_WATER_BLAST(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.WATER_BLAST_SPRITE),
    SPELL_LVL_3_ENCHANT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.LVL_3_ENCHANT_SPRITE),
    SPELL_IBAN_BLAST(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.IBAN_BLAST_SPRITE),
    SPELL_SNARE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.SNARE_SPRITE),
    SPELL_MAGIC_DART(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.MAGIC_DART_SPRITE),
    SPELL_ARDOUGNE_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.ARDOUGNE_TELEPORT_SPRITE),
    SPELL_EARTH_BLAST(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.EARTH_BLAST_SPRITE),
    SPELL_HIGH_LEVEL_ALCHEMY(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.HIGH_LEVEL_ALCHEMY_SPRITE),
    SPELL_CHARGE_WATER_ORB(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.CHARGE_WATER_ORB_SPRITE),
    SPELL_LVL_4_ENCHANT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.LVL_4_ENCHANT_SPRITE),
    SPELL_WATCHTOWER_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.WATCHTOWER_TELEPORT_SPRITE),
    SPELL_FIRE_BLAST(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.FIRE_BLAST_SPRITE),
    SPELL_CHARGE_EARTH_ORB(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.CHARGE_EARTH_ORB_SPRITE),
    SPELL_BONES_TO_PEACHES(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.BONES_TO_PEACHES_SPRITE),
    SPELL_SARADOMIN_STRIKE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.SARADOMIN_STRIKE_SPRITE),
    SPELL_CLAWS_OF_GUTHIX(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.CLAWS_OF_GUTHIX_SPRITE),
    SPELL_FLAMES_OF_ZAMORAK(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.FLAMES_OF_ZAMORAK_SPRITE),
    SPELL_TROLLHEIM_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.TROLLHEIM_TELEPORT_SPRITE),
    SPELL_WIND_WAVE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.WIND_WAVE_SPRITE),
    SPELL_CHARGE_FIRE_ORB(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.CHARGE_FIRE_ORB_SPRITE),
    SPELL_APE_ATOLL_TELEPORT_STANDARD(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.APE_ATOLL_TELEPORT_SPRITE),
    SPELL_WATER_WAVE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.WATER_WAVE_SPRITE),
    SPELL_CHARGE_AIR_ORB(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.CHARGE_AIR_ORB_SPRITE),
    SPELL_VULNERABILITY(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.VULNERABILITY_SPRITE),
    SPELL_LVL_5_ENCHANT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.LVL_5_ENCHANT_SPRITE),
    SPELL_KOUREND_CASTLE_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.KOUREND_CASTLE_TELEPORT_SPRITE),
    SPELL_EARTH_WAVE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.EARTH_WAVE_SPRITE),
    SPELL_ENFEEBLE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.ENFEEBLE_SPRITE),
    SPELL_FIRE_WAVE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.FIRE_WAVE_SPRITE),
    SPELL_ENTANGLE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.ENTANGLE_SPRITE),
    SPELL_TELEOTHER_LUMBRIDGE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.TELEOTHER_LUMBRIDGE_SPRITE),
    SPELL_STUN(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.STUN_SPRITE),
    SPELL_CHARGE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.CHARGE_SPRITE),
    SPELL_WIND_SURGE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.WIND_SURGE_SPRITE),
    SPELL_TELEOTHER_FALADOR(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.TELEOTHER_FALADOR_SPRITE),
    SPELL_WATER_SURGE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.WATER_SURGE_SPRITE),
    SPELL_TELE_BLOCK(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.TELE_BLOCK_SPRITE),
    SPELL_LVL_6_ENCHANT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.LVL_6_ENCHANT_SPRITE),
    SPELL_TELEOTHER_CAMELOT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.TELEOTHER_CAMELOT_SPRITE),
    SPELL_EARTH_SURGE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.EARTH_SURGE_SPRITE),
    SPELL_LVL_7_ENCHANT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.LVL_7_ENCHANT_SPRITE),
    SPELL_FIRE_SURGE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.FIRE_SURGE_SPRITE),
    /* END OF STANDARD SPELL BOOK WIDGETS*/

    /* ANCIENT SPELL BOOK WIDGETS*/
    SPELL_ICE_RUSH(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.ICE_RUSH_SPRITE),
    SPELL_ICE_BLITZ(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.ICE_BLITZ_SPRITE),
    SPELL_ICE_BURST(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.ICE_BURST_SPRITE),
    SPELL_ICE_BARRAGE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.ICE_BARRAGE_SPRITE),
    SPELL_BLOOD_RUSH(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.BLOOD_RUSH_SPRITE),
    SPELL_BLOOD_BLITZ(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.BLOOD_BLITZ_SPRITE),
    SPELL_BLOOD_BURST(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.BLOOD_BURST_SPRITE),
    SPELL_BLOOD_BARRAGE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.BLOOD_BARRAGE_SPRITE),
    SPELL_SMOKE_RUSH(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.SMOKE_RUSH_SPRITE),
    SPELL_SMOKE_BLITZ(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.SMOKE_BLITZ_SPRITE),
    SPELL_SMOKE_BURST(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.SMOKE_BURST_SPRITE),
    SPELL_SMOKE_BARRAGE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.SMOKE_BARRAGE_SPRITE),
    SPELL_SHADOW_RUSH(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.SHADOW_RUSH_SPRITE),
    SPELL_SHADOW_BLITZ(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.SHADOW_BLITZ_SPRITE),
    SPELL_SHADOW_BURST(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.SHADOW_BURST_SPRITE),
    SPELL_SHADOW_BARRAGE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.SHADOW_BARRAGE_SPRITE),
    SPELL_PADDEWWA_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.PADDEWWA_TELEPORT_SPRITE),
    SPELL_SENNTISTEN_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.SENNTISTEN_TELEPORT_SPRITE),
    SPELL_KHARYRLL_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.KHARYRLL_TELEPORT_SPRITE),
    SPELL_LASSAR_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.LASSAR_TELEPORT_SPRITE),
    SPELL_DAREEYAK_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.DAREEYAK_TELEPORT_SPRITE),
    SPELL_CARRALLANGER_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.CARRALLANGAR_TELEPORT_SPRITE),
    SPELL_ANNAKARL_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.ANNAKARL_TELEPORT_SPRITE),
    SPELL_GHORROCK_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.GHORROCK_TELEPORT_SPRITE),
    /* END OF ANCIENT SPELL BOOK WIDGETS*/

    /* LUNAR SPELL BOOK WIDGETS*/
    SPELL_VENGEANCE_OTHER(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.VENGEANCE_OTHER_SPRITE),
    SPELL_VENGEANCE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.VENGEANCE_SPRITE),
    SPELL_BAKE_PIE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.BAKE_PIE_SPRITE),
    SPELL_CURE_PLANT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.CURE_PLANT_SPRITE),
    SPELL_MONSTER_EXAMINE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.MONSTER_EXAMINE_SPRITE),
    SPELL_NPC_CONTACT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.NPC_CONTACT_SPRITE),
    SPELL_CURE_OTHER(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.CURE_OTHER_SPRITE),
    SPELL_HUMIDIFY(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.HUMIDIFY_SPRITE),
    SPELL_MOONCLAN_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.MOONCLAN_TELEPORT_SPRITE),
    SPELL_TELE_GROUP_MOONCLAN(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.TELE_GROUP_MOONCLAN_SPRITE),
    SPELL_CURE_ME(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.CURE_ME_SPRITE),
    SPELL_HUNTER_KIT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.HUNTER_KIT_SPRITE),
    SPELL_WATERBIRTH_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.WATERBIRTH_TELEPORT_SPRITE),
    SPELL_TELE_GROUP_WATERBIRTH(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.TELE_GROUP_WATERBIRTH_SPRITE),
    SPELL_CURE_GROUP(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.CURE_GROUP_SPRITE),
    SPELL_STAT_SPY(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.STAT_SPY_SPRITE),
    SPELL_BARBARIAN_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.BARBARIAN_TELEPORT_SPRITE),
    SPELL_TELE_GROUP_BARBARIAN(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.TELE_GROUP_BARBARIAN_SPRITE),
    SPELL_SUPERGLASS_MAKE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.SUPERGLASS_MAKE_SPRITE),
    SPELL_TAN_LEATHER(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.TAN_LEATHER_SPRITE),
    SPELL_KHAZARD_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.KHAZARD_TELEPORT_SPRITE),
    SPELL_TELE_GROUP_KHAZARD(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.TELE_GROUP_KHAZARD_SPRITE),
    SPELL_DREAM(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.DREAM_SPRITE),
    SPELL_STRING_JEWELLERY(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.STRING_JEWELLERY_SPRITE),
    SPELL_STAT_RESTORE_POT_SHARE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.STAT_RESTORE_POT_SHARE_SPRITE),
    SPELL_MAGIC_IMBUE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.MAGIC_IMBUE_SPRITE),
    SPELL_FERTILE_SOIL(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.FERTILE_SOIL_SPRITE),
    SPELL_BOOST_POTION_SHARE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.BOOST_POTION_SHARE_SPRITE),
    SPELL_FISHING_GUILD_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.FISHING_GUILD_TELEPORT_SPRITE),
    SPELL_TELE_GROUP_FISHING_GUILD(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.TELE_GROUP_FISHING_GUILD_SPRITE),
    SPELL_PLANK_MAKE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.PLANK_MAKE_SPRITE),
    SPELL_CATHERBY_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.CATHERBY_TELEPORT_SPRITE),
    SPELL_TELE_GROUP_CATHERBY(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.TELE_GROUP_CATHERBY_SPRITE),
    SPELL_RECHARGE_DRAGONSTONE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.RECHARGE_DRAGONSTONE_SPRITE),
    SPELL_ICE_PLATEAU_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.ICE_PLATEAU_TELEPORT_SPRITE),
    SPELL_TELE_GROUP_ICE_PLATEAU(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.TELE_GROUP_ICE_PLATEAU_SPRITE),
    SPELL_ENERGY_TRANSFER(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.ENERGY_TRANSFER_SPRITE),
    SPELL_HEAL_OTHER(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.HEAL_OTHER_SPRITE),
    SPELL_HEAL_GROUP(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.HEAL_GROUP_SPRITE),
    SPELL_SPELLBOOK_SWAP(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.SPELLBOOK_SWAP_SPRITE),
    SPELL_GEOMANCY(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.GEOMANCY_SPRITE),
    SPELL_SPIN_FLAX(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.SPIN_FLAX_SPRITE),
    SPELL_OURANIA_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.OURANIA_TELEPORT_SPRITE),
    /* END OF LUNAR SPELL BOOK WIDGETS*/
    SPELL_TOOLTIP(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.TOOLTIP),
    /* ARCEUUS SPELL BOOK WIDGETS*/
    SPELL_BASIC_REANIMATION(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.BASIC_REANIMATION_SPRITE),
    SPELL_ARCEUUS_LIBRARY_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.ARCEUUS_LIBRARY_TELEPORT_SPRITE),
    SPELL_ADEPT_REANIMATION(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.ADEPT_REANIMATION_SPRITE),
    SPELL_EXPERT_REANIMATION(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.EXPERT_REANIMATION_SPRITE),
    SPELL_MASTER_REANIMATION(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.MASTER_REANIMATION_SPRITE),
    SPELL_DRAYNOR_MANOR_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.DRAYNOR_MANOR_TELEPORT_SPRITE),
    SPELL_MIND_ALTAR_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.MIND_ALTAR_TELEPORT_SPRITE),
    SPELL_RESPAWN_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.RESPAWN_TELEPORT_SPRITE),
    SPELL_SALVE_GRAVEYARD_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.SALVE_GRAVEYARD_TELEPORT_SPRITE),
    SPELL_FENKENSTRAINS_CASTLE_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.FENKENSTRAINS_CASTLE_TELEPORT_SPRITE),
    SPELL_WEST_ARDOUGNE_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.WEST_ARDOUGNE_TELEPORT_SPRITE),
    SPELL_HARMONY_ISLAND_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.HARMONY_ISLAND_TELEPORT_SPRITE),
    SPELL_CEMETERY_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.CEMETERY_TELEPORT_SPRITE),
    SPELL_RESURRECT_CROPS(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.RESURRECT_CROPS_SPRITE),
    SPELL_BARROWS_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.BARROWS_TELEPORT_SPRITE),
    SPELL_APE_ATOLL_TELEPORT_ARCEUUS(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.APE_ATOLL_TELEPORT_ARCEUUS_SPRITE),
    SPELL_BATTLEFRONT_TELEPORT(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.BATTLEFRONT_TELEPORT_SPRITE),
    SPELL_INFERIOR_DEMONBANE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.INFERIOR_DEMONBANE_SPRITE),
    SPELL_SUPERIOR_DEMONBANE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.SUPERIOR_DEMONBANE_SPRITE),
    SPELL_DARK_DEMONBANE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.DARK_DEMONBANE_SPRITE),
    SPELL_MARK_OF_DARKNESS(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.MARK_OF_DARKNESS_SPRITE),
    SPELL_GHOSTLY_GRASP(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.GHOSTLY_GRASP_SPRITE),
    SPELL_SKELETAL_GRASP(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.SKELETAL_GRASP_SPRITE),
    SPELL_UNDEAD_GRASP(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.UNDEAD_GRASP_SPRITE),
    SPELL_WARD_OF_ARCEUUS(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.WARD_OF_ARCEUUS_SPRITE),
    SPELL_LESSER_CORRUPTION(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.LESSER_CORRUPTION_SPRITE),
    SPELL_GREATER_CORRUPTION(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.GREATER_CORRUPTION_SPRITE),
    SPELL_DEMONIC_OFFERING(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.DEMONIC_OFFERING_SPRITE),
    SPELL_SINISTER_OFFERING(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.SINISTER_OFFERING_SPRITE),
    SPELL_DEGRIME(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.DEGRIME_SPRITE),
    SPELL_SHADOW_VEIL(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.SHADOW_VEIL_SPRITE),
    SPELL_VILE_VIGOUR(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.VILE_VIGOUR_SPRITE),
    SPELL_DARK_LURE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.DARK_LURE_SPRITE),
    SPELL_DEATH_CHARGE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.DEATH_CHARGE_SPRITE),
    SPELL_RESURRECT_LESSER_GHOST(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.RESURRECT_LESSER_GHOST_SPRITE),
    SPELL_RESURRECT_LESSER_SKELETON(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.RESURRECT_LESSER_SKELETON_SPRITE),
    SPELL_RESURRECT_LESSER_ZOMBIE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.RESURRECT_LESSER_ZOMBIE_SPRITE),
    SPELL_RESURRECT_SUPERIOR_GHOST(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.RESURRECT_SUPERIOR_GHOST_SPRITE),
    SPELL_RESURRECT_SUPERIOR_SKELETON(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.RESURRECT_SUPERIOR_SKELETON_SPRITE),
    SPELL_RESURRECT_SUPERIOR_ZOMBIE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.RESURRECT_SUPERIOR_ZOMBIE_SPRITE),
    SPELL_RESURRECT_GREATER_GHOST(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.RESURRECT_GREATER_GHOST_SPRITE),
    SPELL_RESURRECT_GREATER_SKELETON(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.RESURRECT_GREATER_SKELETON_SPRITE),
    SPELL_RESURRECT_GREATER_ZOMBIE(WidgetID.SPELLBOOK_GROUP_ID, WidgetIndices.SpellbookTab.RESURRECT_GREATER_ZOMBIE_SPRITE),
    /* END OF ARCEUUS SPELL BOOK WIDGETS*/

    /**
     * [MINIMAP] Widget Info
     */
    MINIMAP_XP_ORB(WidgetIndices.Minimap.GROUP_INDEX, WidgetIndices.Minimap.XP_ORB_SPRITE),
    MINIMAP_HEALTH_ORB(WidgetIndices.Minimap.GROUP_INDEX, WidgetIndices.Minimap.HEALTH_ORB_CONTAINER),
    MINIMAP_HEALTH_ORB_TEXT(WidgetIndices.Minimap.GROUP_INDEX, WidgetIndices.Minimap.HEALTH_ORB_LABEL),
    MINIMAP_QUICK_PRAYER_ORB(WidgetIndices.Minimap.GROUP_INDEX, WidgetIndices.Minimap.QUICK_PRAYER_ORB_CONTAINER),
    MINIMAP_QUICK_PRAYER_ORB_TEXT(WidgetIndices.Minimap.GROUP_INDEX, WidgetIndices.Minimap.QUICK_PRAYER_ORB_LABEL),
    MINIMAP_QUICK_PRAYER_ORB_SPRITE(WidgetIndices.Minimap.GROUP_INDEX, WidgetIndices.Minimap.QUICK_PRAYER_ORB_SPRITE),
    MINIMAP_RUN_ORB(WidgetInfo.MINIMAP_TOGGLE_RUN_ORB.getGroupId(), WidgetInfo.MINIMAP_TOGGLE_RUN_ORB.getChildId()),
    MINIMAP_RUN_ORB_TEXT(WidgetIndices.Minimap.GROUP_INDEX, WidgetIndices.Minimap.RUN_ORB_LABEL),
    MINIMAP_SPEC_ORB(WidgetIndices.Minimap.GROUP_INDEX, WidgetIndices.Minimap.SPEC_ORB_CONTAINER),
    MINIMAP_SPEC_ORB_TEXT(WidgetIndices.Minimap.GROUP_INDEX, WidgetIndices.Minimap.SPEC_ORB_LABEL),
    MINIMAP_BOND_ORB(WidgetIndices.Minimap.GROUP_INDEX, WidgetIndices.Minimap.BOND_ORB_CONTAINER),
    MINIMAP_WIKI_BANNER(WidgetIndices.Minimap.GROUP_INDEX, WidgetIndices.Minimap.WIKI_BANNER_CONTAINER),
    MINIMAP_WORLDMAP_ORB(WidgetIndices.Minimap.GROUP_INDEX, WidgetIndices.Minimap.WORLDMAP_ORB_SPRITE),
    // [MINIMAP]

    /**
     * [RESIZABLE CLASSIC VIEWPORT] Widget Info
     */
    RESIZABLE_CLASSIC_DIALOG_WINDOW(WidgetIndices.ResizableClassicViewport.GROUP_INDEX, WidgetIndices.ResizableClassicViewport.DIALOG_WINDOW_CONTAINER),
    RESIZABLE_CLASSIC_MINIMAP(WidgetIndices.ResizableClassicViewport.GROUP_INDEX, WidgetIndices.ResizableClassicViewport.MINIMAP_CONTAINER),
    RESIZABLE_CLASSIC_COMPASS(WidgetIndices.ResizableClassicViewport.GROUP_INDEX, WidgetIndices.ResizableClassicViewport.MINIMAP_COMPASS_SPRITE),
    RESIZABLE_CLASSIC_CHAT_CHANNEL(WidgetIndices.ResizableClassicViewport.GROUP_INDEX, WidgetIndices.ResizableClassicViewport.TAB_CHAT_CHANNEL_SPRITE),
    RESIZABLE_CLASSIC_ACC_MANAGEMENT(WidgetIndices.ResizableClassicViewport.GROUP_INDEX, WidgetIndices.ResizableClassicViewport.TAB_ACC_MANAGEMENT_SPRITE),
    RESIZABLE_CLASSIC_FRIEND_LIST(WidgetIndices.ResizableClassicViewport.GROUP_INDEX, WidgetIndices.ResizableClassicViewport.TAB_FRIENDS_LIST_SPRITE),
    RESIZABLE_CLASSIC_LOGOUT(WidgetIndices.ResizableClassicViewport.GROUP_INDEX, WidgetIndices.ResizableClassicViewport.TAB_LOGOUT_SPRITE),
    RESIZABLE_CLASSIC_SETTINGS(WidgetIndices.ResizableClassicViewport.GROUP_INDEX, WidgetIndices.ResizableClassicViewport.TAB_SETTINGS_SPRITE),
    RESIZABLE_CLASSIC_EMOTES(WidgetIndices.ResizableClassicViewport.GROUP_INDEX, WidgetIndices.ResizableClassicViewport.TAB_EMOTES_SPRITE),
    RESIZABLE_CLASSIC_MUSIC_PLAYER(WidgetIndices.ResizableClassicViewport.GROUP_INDEX, WidgetIndices.ResizableClassicViewport.TAB_MUSIC_PLAYER_SPRITE),
    RESIZABLE_CLASSIC_COMBAT_OPTIONS(WidgetIndices.ResizableClassicViewport.GROUP_INDEX, WidgetIndices.ResizableClassicViewport.TAB_COMBAT_OPTIONS_SPRITE),
    RESIZABLE_CLASSIC_SKILLS(WidgetIndices.ResizableClassicViewport.GROUP_INDEX, WidgetIndices.ResizableClassicViewport.TAB_SKILLS_SPRITE),
    RESIZABLE_CLASSIC_QUESTS(WidgetIndices.ResizableClassicViewport.GROUP_INDEX, WidgetIndices.ResizableClassicViewport.TAB_QUEST_LIST_SPRITE),
    RESIZABLE_CLASSIC_INVENTORY(WidgetIndices.ResizableClassicViewport.GROUP_INDEX, WidgetIndices.ResizableClassicViewport.TAB_INVENTORY_SPRITE),
    RESIZABLE_CLASSIC_WORN_EQUIPMENT(WidgetIndices.ResizableClassicViewport.GROUP_INDEX, WidgetIndices.ResizableClassicViewport.TAB_WORN_EQUIPMENT_SPRITE),
    RESIZABLE_CLASSIC_PRAYER(WidgetIndices.ResizableClassicViewport.GROUP_INDEX, WidgetIndices.ResizableClassicViewport.TAB_PRAYER_SPRITE),
    RESIZABLE_CLASSIC_MAGIC(WidgetIndices.ResizableClassicViewport.GROUP_INDEX, WidgetIndices.ResizableClassicViewport.TAB_MAGIC_SPRITE),
    // [RESIZABLE CLASSIC VIEWPORT]

    /**
     * [RESIZABLE MODERN VIEWPORT] Widget Info
     */
    RESIZABLE_MODERN_DIALOG_WINDOW(WidgetIndices.ResizableModernViewport.GROUP_INDEX, WidgetIndices.ResizableModernViewport.DIALOG_WINDOW_CONTAINER),
    RESIZABLE_MODERN_MINIMAP(WidgetIndices.ResizableModernViewport.GROUP_INDEX, WidgetIndices.ResizableModernViewport.MINIMAP_CONTAINER),
    RESIZABLE_MODERN_COMPASS(WidgetIndices.ResizableModernViewport.GROUP_INDEX, WidgetIndices.ResizableModernViewport.MINIMAP_COMPASS_SPRITE),
    RESIZABLE_MODERN_CHAT_CHANNEL(WidgetIndices.ResizableModernViewport.GROUP_INDEX, WidgetIndices.ResizableModernViewport.TAB_CHAT_CHANNEL_SPRITE),
    RESIZABLE_MODERN_ACC_MANAGEMENT(WidgetIndices.ResizableModernViewport.GROUP_INDEX, WidgetIndices.ResizableModernViewport.TAB_ACC_MANAGEMENT_SPRITE),
    RESIZABLE_MODERN_FRIEND_LIST(WidgetIndices.ResizableModernViewport.GROUP_INDEX, WidgetIndices.ResizableModernViewport.TAB_FRIENDS_LIST_SPRITE),
    RESIZABLE_MODERN_LOGOUT(WidgetIndices.ResizableModernViewport.GROUP_INDEX, WidgetIndices.ResizableModernViewport.LOGOUT_SPRITE),
    RESIZABLE_MODERN_SETTINGS(WidgetIndices.ResizableModernViewport.GROUP_INDEX, WidgetIndices.ResizableModernViewport.TAB_SETTINGS_SPRITE),
    RESIZABLE_MODERN_EMOTES(WidgetIndices.ResizableModernViewport.GROUP_INDEX, WidgetIndices.ResizableModernViewport.TAB_EMOTES_SPRITE),
    RESIZABLE_MODERN_MUSIC_PLAYER(WidgetIndices.ResizableModernViewport.GROUP_INDEX, WidgetIndices.ResizableModernViewport.TAB_MUSIC_PLAYER_SPRITE),
    RESIZABLE_MODERN_COMBAT_OPTIONS(WidgetIndices.ResizableModernViewport.GROUP_INDEX, WidgetIndices.ResizableModernViewport.TAB_COMBAT_OPTIONS_SPRITE),
    RESIZABLE_MODERN_SKILLS(WidgetIndices.ResizableModernViewport.GROUP_INDEX, WidgetIndices.ResizableModernViewport.TAB_SKILLS_SPRITE),
    RESIZABLE_MODERN_QUESTS(WidgetIndices.ResizableModernViewport.GROUP_INDEX, WidgetIndices.ResizableModernViewport.TAB_QUEST_LIST_SPRITE),
    RESIZABLE_MODERN_INVENTORY(WidgetIndices.ResizableModernViewport.GROUP_INDEX, WidgetIndices.ResizableModernViewport.TAB_INVENTORY_SPRITE),
    RESIZABLE_MODERN_WORN_EQUIPMENT(WidgetIndices.ResizableModernViewport.GROUP_INDEX, WidgetIndices.ResizableModernViewport.TAB_WORN_EQUIPMENT_SPRITE),
    RESIZABLE_MODERN_PRAYER(WidgetIndices.ResizableModernViewport.GROUP_INDEX, WidgetIndices.ResizableModernViewport.TAB_PRAYER_SPRITE),
    RESIZABLE_MODERN_MAGIC(WidgetIndices.ResizableModernViewport.GROUP_INDEX, WidgetIndices.ResizableModernViewport.TAB_MAGIC_SPRITE),
    // [RESIZABLE MODERN VIEWPORT]

    /**
     * [FIXED CLASSIC VIEWPORT] Widget Info
     */
    FIXED_CLASSIC_DIALOG_WINDOW(WidgetIndices.FixedClassicViewport.GROUP_INDEX, WidgetIndices.FixedClassicViewport.DIALOG_WINDOW_CONTAINER),
    FIXED_CLASSIC_MINIMAP(WidgetIndices.FixedClassicViewport.GROUP_INDEX, WidgetIndices.FixedClassicViewport.MINIMAP_CONTAINER),
    FIXED_CLASSIC_COMPASS(WidgetIndices.FixedClassicViewport.GROUP_INDEX, WidgetIndices.FixedClassicViewport.MINIMAP_COMPASS_SPRITE),
    FIXED_CLASSIC_CHAT_CHANNEL(WidgetIndices.FixedClassicViewport.GROUP_INDEX, WidgetIndices.FixedClassicViewport.TAB_CHAT_CHANNEL_SPRITE),
    FIXED_CLASSIC_ACC_MANAGEMENT(WidgetIndices.FixedClassicViewport.GROUP_INDEX, WidgetIndices.FixedClassicViewport.TAB_ACC_MANAGEMENT_SPRITE),
    FIXED_CLASSIC_FRIEND_LIST(WidgetIndices.FixedClassicViewport.GROUP_INDEX, WidgetIndices.FixedClassicViewport.TAB_FRIENDS_LIST_SPRITE),
    FIXED_CLASSIC_LOGOUT(WidgetIndices.FixedClassicViewport.GROUP_INDEX, WidgetIndices.FixedClassicViewport.TAB_LOGOUT_SPRITE),
    FIXED_CLASSIC_SETTINGS(WidgetIndices.FixedClassicViewport.GROUP_INDEX, WidgetIndices.FixedClassicViewport.TAB_SETTINGS_SPRITE),
    FIXED_CLASSIC_EMOTES(WidgetIndices.FixedClassicViewport.GROUP_INDEX, WidgetIndices.FixedClassicViewport.TAB_EMOTES_SPRITE),
    FIXED_CLASSIC_MUSIC_PLAYER(WidgetIndices.FixedClassicViewport.GROUP_INDEX, WidgetIndices.FixedClassicViewport.TAB_MUSIC_PLAYER_SPRITE),
    FIXED_CLASSIC_COMBAT_OPTIONS(WidgetIndices.FixedClassicViewport.GROUP_INDEX, WidgetIndices.FixedClassicViewport.TAB_COMBAT_OPTIONS_SPRITE),
    FIXED_CLASSIC_SKILLS(WidgetIndices.FixedClassicViewport.GROUP_INDEX, WidgetIndices.FixedClassicViewport.TAB_SKILLS_SPRITE),
    FIXED_CLASSIC_QUESTS(WidgetIndices.FixedClassicViewport.GROUP_INDEX, WidgetIndices.FixedClassicViewport.TAB_QUEST_LIST_SPRITE),
    FIXED_CLASSIC_INVENTORY(WidgetIndices.FixedClassicViewport.GROUP_INDEX, WidgetIndices.FixedClassicViewport.TAB_INVENTORY_SPRITE),
    FIXED_CLASSIC_WORN_EQUIPMENT(WidgetIndices.FixedClassicViewport.GROUP_INDEX, WidgetIndices.FixedClassicViewport.TAB_WORN_EQUIPMENT_SPRITE),
    FIXED_CLASSIC_PRAYER(WidgetIndices.FixedClassicViewport.GROUP_INDEX, WidgetIndices.FixedClassicViewport.TAB_PRAYER_SPRITE),
    FIXED_CLASSIC_MAGIC(WidgetIndices.FixedClassicViewport.GROUP_INDEX, WidgetIndices.FixedClassicViewport.TAB_MAGIC_SPRITE),
    // [FIXED CLASSIC  VIEWPORT]

    /**
     * [PRAYER] Widget Info
     */
    PRAYER_STANDARD_BOOK(WidgetIndices.PrayersTab.GROUP_ID, WidgetIndices.PrayersTab.PRAYERS_CONTAINER);
    // [PRAYER]

    private final int groupId;
    private final int childId;

    /**
     * Creates a new {@link GlobalWidgetInfo} enum value based on the passed child and group ids.
     * NOTE: Enumerated values can not be constructed. They must be added here or extended
     * via the extends keyword for your enumerated widget id class.
     *
     * @param groupId    the group id of the widget
     * @param childId    the child id of the widget
     */
    GlobalWidgetInfo(int groupId, int childId)
    {
        this.groupId = groupId;
        this.childId = childId;
    }

    /**
     * Creates a new {@link GlobalWidgetInfo} enum value based on the passed {@link WidgetInfo} enum value.
     * Basically used to re-skin an existing one to assist in contextually calling.
     * Or in simpler terms, an alias for an existing enum value.
     * NOTE: Enumerated values can not be constructed. They must be added here or extended
     * via the extends keyword for your enumerated widget id class.
     *
     * @param widgetInfo    the widget value to base the new enum value off of.
     */
    GlobalWidgetInfo(WidgetInfo widgetInfo) {
        this.groupId = widgetInfo.getGroupId();
        this.childId = widgetInfo.getChildId();
    }

    /**
     * Creates a new {@link GlobalWidgetInfo} enum value based on the passed {@link GlobalWidgetInfo} enum value.
     * Basically used to re-skin an existing one to assist in contextually calling.
     * Or in simpler terms, an alias for an existing enum value.
     * NOTE: Enumerated values can not be constructed. They must be added here or extended
     * via the extends keyword for your enumerated widget id class.
     *
     * @param widgetInfo    the widget value to base the new enum value off of.
     */
    GlobalWidgetInfo(GlobalWidgetInfo widgetInfo) {
        this.groupId = widgetInfo.getGroupId();
        this.childId = widgetInfo.getChildId();
    }

    /**
     * Gets the ID of the group-child pairing.
     *
     * @return the ID
     */
    public int getId()
    {
        return groupId << 16 | childId;
    }

    /**
     * Gets the group ID of the pair.
     *
     * @return the group ID
     */
    public int getGroupId()
    {
        return groupId;
    }

    /**
     * Gets the ID of the child in the group.
     *
     * @return the child ID
     */
    public int getChildId()
    {
        return childId;
    }

    /**
     * Gets the packed widget ID.
     * Any usage where regular WidgetInfo is required and an easy conversion is required.
     * This will enable use of the RuneLite WidgetInfo class somewhat indirectly.
     * Method calls using this are for example:
     * client.getWidget()
     *
     * @return the packed ID
     */
    public int getPackedId()
    {
        return groupId << 16 | childId;
    }

    /**
     * Utility method that converts an ID returned by {@link #getId()} back
     * to its group ID.
     *
     * @param id passed group-child ID
     * @return the group ID
     */
    public static int TO_GROUP(int id)
    {
        return id >>> 16;
    }

    /**
     * Utility method that converts an ID returned by {@link #getId()} back
     * to its child ID.
     *
     * @param id passed group-child ID
     * @return the child ID
     */
    public static int TO_CHILD(int id)
    {
        return id & 0xFFFF;
    }

    /**
     * Packs the group and child IDs into a single integer.
     *
     * @param groupId the group ID
     * @param childId the child ID
     * @return the packed ID
     */
    public static int PACK(int groupId, int childId)
    {
        return groupId << 16 | childId;
    }
}
